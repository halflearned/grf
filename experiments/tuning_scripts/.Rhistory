treatment_propensity <- 0.5
W <- matrix(stats::rbinom(n = n, size = 1, prob = treatment_propensity), nrow = n, ncol = 1)
zeta1 <- 1 + 1/(1 + exp(-20 * (X[, 1] - (1/3))))
zeta2 <- 1 + 1/(1 + exp(-20 * (X[, 2] - (1/3))))
Tau <- matrix(zeta1 * zeta2, nrow = n, ncol = 1)
Y <- matrix(main_effect + W * Tau + noise, nrow = n, ncol = 1)
output <- list(X = X, W = W, Y = Y, Tau = Tau)
}
athey2017estimation2 <- function(n = 5000, p = 10) {
X <- matrix(runif(n * p, min = 0, max = 1), nrow = n, ncol = p)
noise <- stats::rnorm(n = n)
main_effect <- rep(0, times = n)
treatment_propensity <- 0.5
W <- matrix(stats::rbinom(n = n, size = 1, prob = treatment_propensity), nrow = n, ncol = 1)
zeta1 <- 2/(1 + exp(-12 * (X[, 1] - (1/2))))
zeta2 <- 2/(1 + exp(-12 * (X[, 2] - (1/2))))
Tau <- matrix(zeta1 * zeta2, nrow = n, ncol = 1)
Y <- matrix(main_effect + W * Tau + noise, nrow = n, ncol = 1)
output <- list(X = X, W = W, Y = Y, Tau = Tau)
return(output)
}
xlearners6 <- function(n) {
X <- matrix(runif(n = n * 20, min = 0, max = 1), nrow = n, ncol = 20)
e <- 0.25 * (1 + stats::dbeta(X[, 1], shape1 = 2, shape = 4))
mu_0 <- 2 * X[, 1] - 1
mu_1 <- mu_0
W <- matrix(stats::rbinom(n = n, size = 1, prob = e), nrow = n, ncol = 1)
y <- matrix(ifelse(W == 0, mu_0, mu_1), nrow = n, ncol = 1)
tau <- matrix(mu_1 - mu_0, nrow = n, ncol = 1)
output <- list(X = X, Y = y, W = W, Tau = tau)
return(output)
}
get(xlearners6)
get("xlearners6")
list(simple, athey2015machine1, athey2017estimation1, athey2017estimation2)
list(simple=simple, athey2015machine1=athey2015machine1, athey2017estimation1=athey2017estimation1, athey2017estimation2=athey2017estimation2)
data <- datasets[[sample.int(length(datasets))]]
datasets <- list(simple=simple,
athey2015machine1=athey2015machine1,
athey2017estimation1=athey2017estimation1,
athey2017estimation2=athey2017estimation2)
data_function <- datasets[[sample.int(length(datasets))]]
dataset[[1]]
datasets[[1]]
datasets[[2]]
datasets[[2]]
sample.int(length(datasets))
sample(length(datasets))
sample(length(datasets), 1)
sample(length(datasets), 1)
data_function <- datasets[[sample.int(length(datasets), 1)]]
data_function
names(datasets)[1]
data_idx <- sample.int(length(datasets), 1)
data_function <- datasets[[data_idx]]
data_name <- names(datasets)[data_idx]
source('~/script.R', echo=TRUE)
source('~/script.R', echo=TRUE)
causal_forest(df$X, df$Y, df$W_
)
causal_forest(df$X, df$Y, df$W)
df$X
causal_forest(df$X, as.numeric(df$Y), df$W)
causal_forest(df$X, as.numeric(df$Y), as.numeric(df$W))
source('~/script.R', echo=TRUE)
source('~/script.R', echo=TRUE)
tau.forest.kriging <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "kriging")
2.01222
source('~/script.R', echo=TRUE)
source('~/Documents/grf/r-package/grf/R/causal_forest.R', echo=TRUE)
source('~/Documents/grf/r-package/grf/R/causal_forest.R', echo=TRUE)
source('~/Documents/grf/r-package/grf/R/causal_forest.R', echo=TRUE)
source('~/Documents/grf/r-package/grf/R/causal_tuning.R', echo=TRUE)
source('~/script.R', echo=TRUE)
data_idx <- sample.int(length(datasets), 1)
data_function <- datasets[[data_idx]]
data_name <- names(datasets)[data_idx]
n <- 500 #sample(c(500, 2000, 5000))
df <- data_function(n)
X <- df$X
Y <- as.numeric(df$Y)
W <- as.numeric(df$W)
Tau <- as.numeric(df$Tau)
tau.forest.kriging <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "kriging")
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
tau.forest.notune <- causal_forest(X, Y, W, tune.parameters = FALSE)
tauhat.kriging <- predict(tau.forest.kriging)$predictions
tauhat.notune <- predict(tau.forest.notune)$predictions
mse.tuned <- mean((tauhat.tuned - Tau)^2)
mse.notune <- mean((tauhat.notune - Tau)^2)
print(mse.tuned)
print(mse.notune)
for (i in seq(10)) {
data_idx <- sample.int(length(datasets), 1)
data_function <- datasets[[data_idx]]
data_name <- names(datasets)[data_idx]
n <- 500 #sample(c(500, 2000, 5000))
df <- data_function(n)
X <- df$X
Y <- as.numeric(df$Y)
W <- as.numeric(df$W)
Tau <- as.numeric(df$Tau)
tau.forest.kriging <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "kriging")
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
tau.forest.notune <- causal_forest(X, Y, W, tune.parameters = FALSE)
tauhat.kriging <- predict(tau.forest.kriging)$predictions
tauhat.notune <- predict(tau.forest.notune)$predictions
mse.tuned <- mean((tauhat.tuned - Tau)^2)
mse.notune <- mean((tauhat.notune - Tau)^2)
print(mse.tuned)
print(mse.notune)
}
source('~/script.R', echo=TRUE)
source('~/script.R', echo=TRUE)
tunable.params
tau.forest.kriging
names(tau.forest.kriging)
tau.forest.kriging$tunable.params
c(tau.forest.kriging$tunable.params)
c(tau.forest.kriging$tunable.params, data=data_function)
c(tau.forest.kriging$tunable.params, data=data_name)
c(tau.forest.kriging$tunable.params, data=data_name, method="kriging", stat="mse", value=mse.tuned)
tau.forest.kriging <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "kriging")
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
tau.forest.notune <- causal_forest(X, Y, W, tune.parameters = FALSE)
tauhat.kriging <- predict(tau.forest.kriging)$predictions
tauhat.notune <- predict(tau.forest.notune)$predictions
mse.kriging <- mean((tauhat.kriging - Tau)^2)
mse.earth <- mean((tauhat.earth - Tau)^2)
mse.notune <- mean((tauhat.notune - Tau)^2)
cfg <- c(tau.forest.kriging$tunable.params, data=data_name,  stat="mse")
v1 <- c(cfg, method="kriging", value=mse.kriging)
v2 <- c(cfg, method="earth", value=mse.earth)
v3 <- c(cfg, method="notune", value=mse.notune)
result <- rbind(v1, v2, v3)
c
source('~/script.R', echo=TRUE)
source('~/script.R', echo=TRUE)
for (i in seq(10)) {
data_idx <- sample.int(length(datasets), 1)
data_function <- datasets[[data_idx]]
data_name <- names(datasets)[data_idx]
n <- 500 #sample(c(500, 2000, 5000))
df <- data_function(n)
X <- df$X
Y <- as.numeric(df$Y)
W <- as.numeric(df$W)
Tau <- as.numeric(df$Tau)
tau.forest.kriging <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "kriging")
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
tau.forest.notune <- causal_forest(X, Y, W, tune.parameters = FALSE)
tauhat.kriging <- predict(tau.forest.kriging)$predictions
tauhat.earth <- predict(tau.forest.earth)$predictions
tauhat.notune <- predict(tau.forest.notune)$predictions
mse.kriging <- mean((tauhat.kriging - Tau)^2)
mse.earth <- mean((tauhat.earth - Tau)^2)
mse.notune <- mean((tauhat.notune - Tau)^2)
cfg <- c(tau.forest.kriging$tunable.params, data=data_name,  stat="mse")
v1 <- c(cfg, method="kriging", value=mse.kriging)
v2 <- c(cfg, method="earth", value=mse.earth)
v3 <- c(cfg, method="notune", value=mse.notune)
result <- rbind(v1, v2, v3)
}
tau.forest.kriging <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "kriging")
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
tau.forest.notune <- causal_forest(X, Y, W, tune.parameters = FALSE)
tauhat.kriging <- predict(tau.forest.kriging)$predictions
tauhat.earth <- predict(tau.forest.earth)$predictions
tauhat.notune <- predict(tau.forest.notune)$predictions
mse.kriging <- mean((tauhat.kriging - Tau)^2)
mse.earth <- mean((tauhat.earth - Tau)^2)
mse.notune <- mean((tauhat.notune - Tau)^2)
cfg <- c(data=data_name,  stat="mse")
v1 <- c(cfg, tau.forest.kriging$tunable.params, method="kriging", value=mse.kriging)
v2 <- c(cfg, tau.forest.earth$tunable.params, method="earth", value=mse.earth)
v3 <- c(cfg, tau.forest.notune$tunable.params, method="notune", value=mse.notune)
data_idx <- sample.int(length(datasets), 1)
data_function <- datasets[[data_idx]]
data_name <- names(datasets)[data_idx]
n <- 500 #sample(c(500, 2000, 5000))
df <- data_function(n)
X <- df$X
Y <- as.numeric(df$Y)
W <- as.numeric(df$W)
Tau <- as.numeric(df$Tau)
tau.forest.kriging <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "kriging")
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
tau.forest.notune <- causal_forest(X, Y, W, tune.parameters = FALSE)
tauhat.kriging <- predict(tau.forest.kriging)$predictions
tauhat.earth <- predict(tau.forest.earth)$predictions
tauhat.notune <- predict(tau.forest.notune)$predictions
mse.kriging <- mean((tauhat.kriging - Tau)^2)
mse.earth <- mean((tauhat.earth - Tau)^2)
mse.notune <- mean((tauhat.notune - Tau)^2)
cfg <- c(data=data_name,  stat="mse")
v1 <- c(cfg, tau.forest.kriging$tunable.params, method="kriging", value=mse.kriging)
v2 <- c(cfg, tau.forest.earth$tunable.params, method="earth", value=mse.earth)
v3 <- c(cfg, tau.forest.notune$tunable.params, method="notune", value=mse.notune)
result <- rbind(v1, v2, v3)
result
data_idx <- sample.int(length(datasets), 1)
data_function <- datasets[[data_idx]]
data_name <- names(datasets)[data_idx]
n <- 500 #sample(c(500, 2000, 5000))
df <- data_function(n)
X <- df$X
Y <- as.numeric(df$Y)
W <- as.numeric(df$W)
Tau <- as.numeric(df$Tau)
tau.forest.kriging <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "kriging")
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
tau.forest.notune <- causal_forest(X, Y, W, tune.parameters = FALSE)
tauhat.kriging <- predict(tau.forest.kriging)$predictions
tauhat.earth <- predict(tau.forest.earth)$predictions
tauhat.notune <- predict(tau.forest.notune)$predictions
mse.kriging <- mean((tauhat.kriging - Tau)^2)
mse.earth <- mean((tauhat.earth - Tau)^2)
mse.notune <- mean((tauhat.notune - Tau)^2)
cfg <- c(data=data_name,  stat="mse")
v1 <- c(cfg, tau.forest.kriging$tunable.params, method="kriging", value=mse.kriging)
v2 <- c(cfg, tau.forest.earth$tunable.params, method="earth", value=mse.earth)
v3 <- c(cfg, tau.forest.notune$tunable.params, method="notune", value=mse.notune)
tau.forest.notune$tunable.params
result <- rbind(v1, v2, v3)
result
names(tau.forest.kriging$tunable.params)
parms <- names(tau.forest.kriging$tunable.params)
v1 <- c(cfg, tau.forest.kriging$tunable.params[params], method="kriging", value=mse.kriging)
parms <- names(tau.forest.kriging$tunable.params)
v1 <- c(cfg, tau.forest.kriging$tunable.params[params], method="kriging", value=mse.kriging)
v1 <- c(cfg, tau.forest.kriging$tunable.params[[params], method="kriging", value=mse.kriging)
v2 <- c(cfg, tau.forest.earth$tunable.params, method="earth", value=mse.earth)
v3 <- c(cfg, tau.forest.notune$tunable.params, method="notune", value=mse.notune)
result <- rbind(v1, v2, v3)
}
v1 <- c(cfg, tau.forest.kriging$tunable.params[[params]], method="kriging", value=mse.kriging)
v1 <- c(cfg, tau.forest.kriging$tunable.params, method="kriging", value=mse.kriging)
v1
tau.forest.kriging
sort(tau.forest.kriging$tunable.params)
v1 <- data.frame(cfg, tau.forest.kriging$tunable.params, method="kriging", value=mse.kriging)
v1 <- data.frame(cfg, c(tau.forest.kriging$tunable.params), method="kriging", value=mse.kriging)
cfg
v1 <- data.frame(c(cfg, tau.forest.kriging$tunable.params), method="kriging", value=mse.kriging))
v1 <- data.frame(c(cfg, tau.forest.kriging$tunable.params), method="kriging", value=mse.kriging)))
v1 <- data.frame(c(cfg, tau.forest.kriging$tunable.params, method="kriging", value=mse.kriging))
v2 <- data.frame(c(cfg, tau.forest.earth$tunable.params, method="earth", value=mse.earth))
v3 <- data.frame(c(cfg, tau.forest.notune$tunable.params, method="notune", value=mse.notune))
v1
v3
2
v3
cfg <- c(data=data_name,  stat="mse")
v1 <- data.frame(rbind(c(cfg, tau.forest.kriging$tunable.params, method="kriging", value=mse.kriging)))
v2 <- data.frame(rbind(c(cfg, tau.forest.earth$tunable.params, method="earth", value=mse.earth)))
v3 <- data.frame(rbind(c(cfg, tau.forest.notune$tunable.params, method="notune", value=mse.notune)))
v1
v3
rbind(v1,v2,v3)
source('~/script.R', echo=TRUE)
data_idx <- sample.int(length(datasets), 1)
data_function <- datasets[[data_idx]]
data_name <- names(datasets)[data_idx]
n <- 500 #sample(c(500, 2000, 5000))
df <- data_function(n)
X <- df$X
Y <- as.numeric(df$Y)
W <- as.numeric(df$W)
Tau <- as.numeric(df$Tau)
tau.forest.kriging <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "kriging")
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
tau.forest.notune <- causal_forest(X, Y, W, tune.parameters = FALSE)
tauhat.kriging <- predict(tau.forest.kriging)$predictions
tauhat.earth <- predict(tau.forest.earth)$predictions
tauhat.notune <- predict(tau.forest.notune)$predictions
mse.kriging <- mean((tauhat.kriging - Tau)^2)
mse.earth <- mean((tauhat.earth - Tau)^2)
mse.notune <- mean((tauhat.notune - Tau)^2)
cfg <- c(data=data_name,  stat="mse")
v1 <- data.frame(rbind(c(cfg, tau.forest.kriging$tunable.params, method="kriging", value=mse.kriging)))
v2 <- data.frame(rbind(c(cfg, tau.forest.earth$tunable.params, method="earth", value=mse.earth)))
v3 <- data.frame(rbind(c(cfg, tau.forest.notune$tunable.params, method="notune", value=mse.notune)))
rbind(v1, v2, v3)
result <- rbind(v1, v2, v3)
result
filename <- sprintf("result_%d", randint(1e9))
filename <- sprintf("result_%d", randint(10000))
filename <- sprintf("result_%d", sample(10000, 1))
filename
filename <- sprintf("result_%d", sample(100000000, 1))
filename
write.table(file=filename, x=result, append=TRUE, quote = FALSE, row.names=FALSE, col.names=i==1)
i = 1
write.table(file=filename, x=result, append=TRUE, quote = FALSE, row.names=FALSE, col.names=i==1)
i = 2
write.table(file=filename, x=result, append=TRUE, quote = FALSE, row.names=FALSE, col.names=i==1)
filename <- sprintf("result_%d.csv", sample(100000000, 1))
write.table(file=filename, x=result, append=TRUE, quote = FALSE, row.names=FALSE, col.names=i==1)
result
write.table(file=filename, x=result, append=TRUE, quote = FALSE, row.names=FALSE, col.names=i==1, sep=",")
source('~/script.R', echo=TRUE)
data_idx <- sample.int(length(datasets), 1)
data_function <- datasets[[data_idx]]
data_name <- names(datasets)[data_idx]
n <- 500 #sample(c(500, 2000, 5000))
df <- data_function(n)
X <- df$X
Y <- as.numeric(df$Y)
W <- as.numeric(df$W)
Tau <- as.numeric(df$Tau)
tau.forest.kriging <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "kriging")
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
tau.forest.notune <- causal_forest(X, Y, W, tune.parameters = FALSE)
tauhat.kriging <- predict(tau.forest.kriging)$predictions
tauhat.earth <- predict(tau.forest.earth)$predictions
tauhat.notune <- predict(tau.forest.notune)$predictions
mse.kriging <- mean((tauhat.kriging - Tau)^2)
mse.earth <- mean((tauhat.earth - Tau)^2)
mse.notune <- mean((tauhat.notune - Tau)^2)
cfg <- c(data=data_name,  stat="mse")
v1 <- data.frame(rbind(c(cfg, tau.forest.kriging$tunable.params, method="kriging", value=mse.kriging)))
v2 <- data.frame(rbind(c(cfg, tau.forest.earth$tunable.params, method="earth", value=mse.earth)))
v3 <- data.frame(rbind(c(cfg, tau.forest.notune$tunable.params, method="notune", value=mse.notune)))
result <- rbind(v1, v2, v3)
write.table(file=filename, x=result, append=TRUE, quote = FALSE, row.names=FALSE, col.names=i==1, sep=",")
result
params
write.table(file=filename, x=result, append=TRUE, quote = FALSE, row.names=FALSE, col.names=i==1, sep=",")
i ==1
i =1
write.table(file=filename, x=result, append=TRUE, quote = FALSE, row.names=FALSE, col.names=i==1, sep=",")
filename <- sprintf("result_%d.csv", sample(100000000, 1))
write.table(file=filename, x=result, append=TRUE, quote = FALSE, row.names=FALSE, col.names=i==1, sep=",")
write.table(file=filename, x=result, append=TRUE, quote = FALSE, row.names=FALSE, col.names=i==1, sep=",")
source('~/script.R', echo=TRUE)
cfg <- c(data=data_name,  stat="mse", n=n, p=dim(X)[2])
v1 <- data.frame(rbind(c(cfg, tau.forest.kriging$tunable.params, method="kriging", value=mse.kriging)))
v2 <- data.frame(rbind(c(cfg, tau.forest.earth$tunable.params, method="earth", value=mse.earth)))
v3 <- data.frame(rbind(c(cfg, tau.forest.notune$tunable.params, method="notune", value=mse.notune)))
result <- rbind(v1, v2, v3)
write.table(file=filename, x=result, append=TRUE, quote = FALSE, row.names=FALSE, col.names=i==1, sep=",")
df <- data_function(n)
X <- df$X
Y <- as.numeric(df$Y)
df
data_name
source('~/script.R', echo=TRUE)
source('~/script.R', echo=TRUE)
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
tau.forest.kriging <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "kriging")
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
tau.forest.earth <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
while(TRUE) causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "earth")
data_name
W
X
Y
source('~/script.R', echo=TRUE)
result
tau.forest.kriging$tunable.params
source('~/script.R', echo=TRUE)
source('~/script.R', echo=TRUE)
result
xlearners1 <- function(n, p=10) {
alpha <- 1
e <- rep(0.01, n)
sigma <- simulate_correlation_matrix(p, alpha = alpha)
means <- rep(0, p)
X <- MASS::mvrnorm(n = n, mu = means, Sigma = sigma)
beta <- runif(p, -5, 5)
mu_0 <- X %*% beta + 5 * (X[, 1] > 0.5) + rnorm(n = n)
mu_1 <- mu_0 + 8 * (X[, 2] > 0.1) + stats::rnorm(n = n)
W <- matrix(stats::rbinom(n = n, size = 1, prob = e), nrow = n, ncol = 1)
y <- matrix(ifelse(W == 0, mu_0, mu_1), nrow = n, ncol = 1)
tau <- matrix(8 * (X[, 2] > 0.1), nrow = n, ncol = 1)
output <- list(X = X, Y = y, W = W, Tau = tau)
return(output)
}
xlearners1(10)
sigma <- matrix(diag(rep(1, p))) + matrix(1, p, p)
p = 10
sigma <- matrix(diag(rep(1, p))) + matrix(1, p, p)
matrix(1, p, p)
sigma <- diag(rep(1, p)) + matrix(1, p, p)
sigma
alpha <- 1
e <- rep(0.01, n)
sigma <- diag(rep(1, p)) + matrix(1, p, p)
means <- rep(0, p)
X <- MASS::mvrnorm(n = n, mu = means, Sigma = sigma)
beta <- runif(p, -5, 5)
mu_0 <- X %*% beta + 5 * (X[, 1] > 0.5) + rnorm(n = n)
mu_1 <- mu_0 + 8 * (X[, 2] > 0.1) + stats::rnorm(n = n)
W <- matrix(stats::rbinom(n = n, size = 1, prob = e), nrow = n, ncol = 1)
y <- matrix(ifelse(W == 0, mu_0, mu_1), nrow = n, ncol = 1)
tau <- matrix(8 * (X[, 2] > 0.1), nrow = n, ncol = 1)
output <- list(X = X, Y = y, W = W, Tau = tau)
xlearners1 <- function(n, p=10) {
alpha <- 1
e <- rep(0.01, n)
sigma <- diag(rep(1, p)) + matrix(1, p, p)
means <- rep(0, p)
X <- MASS::mvrnorm(n = n, mu = means, Sigma = sigma)
beta <- runif(p, -5, 5)
mu_0 <- X %*% beta + 5 * (X[, 1] > 0.5) + rnorm(n = n)
mu_1 <- mu_0 + 8 * (X[, 2] > 0.1) + stats::rnorm(n = n)
W <- matrix(stats::rbinom(n = n, size = 1, prob = e), nrow = n, ncol = 1)
y <- matrix(ifelse(W == 0, mu_0, mu_1), nrow = n, ncol = 1)
tau <- matrix(8 * (X[, 2] > 0.1), nrow = n, ncol = 1)
output <- list(X = X, Y = y, W = W, Tau = tau)
return(output)
}
xlearners1
xlearners1(10)
xlearners1(1000)
xlearners1(10)
xlearners1(1000)$W
mean(xlearners1(1000)$W)
xlearners4 <- function(n, p=10) {
e <- rep(0.5, n)
sigma <- diag(rep(1, p)) + matrix(1, p, p)
means <- rep(0, p)
X <- MASS::mvrnorm(n = n, mu = means, Sigma = sigma)
Beta <- runif(d, 1, p)
mu_0 <- X %*% Beta
mu_1 <- mu_0
W <- matrix(stats::rbinom(n = n, size = 1, prob = e), nrow = n, ncol = 1)
y <- matrix(ifelse(W == 0, mu_0, mu_1), nrow = n, ncol = 1)
tau <- matrix(mu_1 - mu_0, nrow = n, ncol = 1)
output <- list(X = X, Y = y, W = W, Tau = tau)
return(output)
}
xlearners4
xlearners4(10)
Beta <- runif(0, 1, p)
Beta
Beta <- runif(p)
mu_0 <- X %*% Beta
mu_0
xlearners4 <- function(n, p=10) {
e <- rep(0.5, n)
sigma <- diag(rep(1, p)) + matrix(1, p, p)
means <- rep(0, p)
X <- MASS::mvrnorm(n = n, mu = means, Sigma = sigma)
Beta <- runif(p)
mu_0 <- X %*% Beta
mu_1 <- mu_0
W <- matrix(stats::rbinom(n = n, size = 1, prob = e), nrow = n, ncol = 1)
y <- matrix(ifelse(W == 0, mu_0, mu_1), nrow = n, ncol = 1)
tau <- matrix(mu_1 - mu_0, nrow = n, ncol = 1)
output <- list(X = X, Y = y, W = W, Tau = tau)
return(output)
}
xlearners4
xlearners4(100)
source('~/script.R', echo=TRUE)
source('~/script.R', echo=TRUE)
n
source('~/script.R', echo=TRUE)
help(earth)
library(earth)
help(earth)
source('~/Documents/grf/experiments/tuning_scripts/grftuning.R', echo=TRUE)
source('~/Documents/grf/experiments/tuning_scripts/grftuning.R', echo=TRUE)
result
source('~/Documents/grf/experiments/tuning_scripts/grftuning.R', echo=TRUE)
result
tau.forest.kriging <- causal_forest(X, Y, W, tune.parameters = TRUE, tuning.method = "kriging")
source('~/Documents/grf/experiments/tuning_scripts/grftuning.R', echo=TRUE)
v1
v2
v3
v1
v2
v3
source('~/Documents/grf/experiments/tuning_scripts/grftuning.R', echo=TRUE)
source('~/Documents/grf/r-package/grf/R/causal_forest.R', echo=TRUE)
tunable.params
source('~/Documents/grf/experiments/tuning_scripts/grftuning.R', echo=TRUE)
tunable.params
p <-  tune_causal_forest(X, Y, W, Y.hat, W.hat,
num.fit.trees = num.fit.trees,
num.fit.reps = num.fit.reps,
num.optimize.reps = num.optimize.reps,
min.node.size = min.node.size,
sample.fraction = sample.fraction,
mtry = mtry,
alpha = alpha,
imbalance.penalty = imbalance.penalty,
stabilize.splits = stabilize.splits,
num.threads = num.threads,
honesty = honesty,
honesty.fraction = honesty.fraction,
seed = seed,
clusters = clusters,
samples_per_cluster = samples_per_cluster,
tuning.method = tuning.method)
p
source('~/Documents/grf/experiments/tuning_scripts/grftuning.R', echo=TRUE)
tuning.params
source('~/Documents/grf/experiments/tuning_scripts/grftuning.R', echo=TRUE)
tuning.params
head(optimize.draws)
best
best$tuned.params
source('~/Documents/grf/experiments/tuning_scripts/grftuning.R', echo=TRUE)
source('~/Documents/grf/experiments/tuning_scripts/grftuning.R', echo=TRUE)
result
source('~/Documents/grf/experiments/tuning_scripts/grftuning.R', echo=TRUE)
result
setwd("~/Documents/grf/experiments/tuning_scripts/")
